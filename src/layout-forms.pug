doctype html
block beforehtml
- const cachebust = +new Date()
html
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, viewport-fit=cover, user-scalable=no")
    block meta
    title= title
    script.
      (function () {
        const hostname = location.host.split(':')[0]
        if (hostname === 'localhost') document.write(`<script src="http://${hostname}:35729/livereload.js?snipver=1"></` + 'script>')
      })()
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-default@3/default.min.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@4/dist/css/bootstrap.min.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/prismjs@1/themes/prism-tomorrow.min.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/sweetalert2@9/dist/sweetalert2.min.css")
    link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&display=swap")
    style
      :sass
        [v-cloak]
          display: none
        body, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
          font-family: 'Noto Sans TC', sans-serif
        input, textarea
          font-family: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace!important
    block style
  body
    include /compoment-gtag
    include /compoment-navbar
    #app.container.my-4(v-cloak)
      h1.my-3.text-center= title
      block form
      a.btn.btn-primary.btn-block.my-2(:href="shortcut", target="_blank") 建立名片
      button.btn.btn-danger.btn-block.my-2(type="button", @click="btnReset") 重設為預設資料
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src="https://cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js")
    script(src="https://cdn.jsdelivr.net/npm/js-base64@3/base64.min.js")
    script(src="https://cdn.jsdelivr.net/npm/json5@2/dist/index.min.js")
    script(src="https://cdn.jsdelivr.net/npm/lodash@4/lodash.min.js")
    script(src="https://cdn.jsdelivr.net/npm/papaparse@5/papaparse.min.js")
    script(src="https://cdn.jsdelivr.net/npm/popper.js@1/dist/umd/popper.min.js")
    script(src="https://cdn.jsdelivr.net/npm/prismjs@1/components/prism-core.min.js")
    script(src="https://cdn.jsdelivr.net/npm/prismjs@1/plugins/autoloader/prism-autoloader.min.js")
    script(src="https://cdn.jsdelivr.net/npm/qs@6/dist/qs.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@9")
    script(src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.min.js")
    // bootstrap require jquery and pupper
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@4/dist/js/bootstrap.min.js")
    script(src=`../js/common.js?cachebust=${cachebust}`)
    block before-vue
    script.
      /* global httpBuildQuery, encodeBase64url */
      window.vm = new Vue({
        el: '#app',
        data: () => {
          let vueData
          if (_.isFunction(window.vueData)) vueData = _.cloneDeep(window.vueData())
          else if (_.isPlainObject(window.vueData)) vueData = _.cloneDeep(window.vueData)
          else vueData = {}

          // load vcard data from localStorage
          try {
            const saved = JSON.parse(localStorage.getItem(location.pathname))
            vueData.vcard = { ...vueData.vcard, ..._.omit(saved, ['template']) }
          } catch (err) {}

          return vueData
        },
        async mounted () {
          window.gtagScreenView('瀏覽製作「#{title}」名片網頁')
          window.gtagTiming('mounted start')
          // save vcard to localStorage
          this.$watch('vcard', (newVal, oldVal) => {
            localStorage.setItem(location.pathname, JSON.stringify(newVal))
          }, { deep: true })
          window.gtagTiming('mounted end')
        },
        computed: {
          shortcut () {
            const params = httpBuildQuery(_.mapValues(this.vcard, encodeBase64url))
            if (!_.isString(params) || !params.length) return
            return `https://liff.line.me/#{liffId || liffIdShare}/?${params}`
          },
        },
        methods: {
          async btnReset () {
            try {
              window.gtagEvent('瀏覽製作「#{title}」名片網頁', 'btnReset', this.vcard.template)
              const result = await Swal.fire({
                cancelButtonText: '取消',
                confirmButtonText: '重設',
                icon: 'question',
                reverseButtons: true,
                showCancelButton: true,
                text: '請問你是否要把表單內的資料重設為預設資料？',
                title: '重設為預設資料',
              })
              if (!result.isConfirmed) return
      
              let vueData
              if (_.isFunction(window.vueData)) vueData = _.cloneDeep(window.vueData())
              else if (_.isPlainObject(window.vueData)) vueData = _.cloneDeep(window.vueData)
              else vueData = {}
              this.$set(this, 'vcard', vueData.vcard)
            } catch (err) {
              window.gtagError(err, true)
              console.error(err)
            }
          },
        },
      })